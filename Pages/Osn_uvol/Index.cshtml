@page
@model WebAppCZN.Pages.Osn_uvol.IndexModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@using WebAppCZN.Data.BD
@inject WebAppCZN.Data.ApplicationDbContext _context
@{
    ViewData["Title"] = "Index";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Основания увольнения</h1>
@if (SignInManager.IsSignedIn(User))
{

    var userID = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var user = await _context.Пользователи.FirstOrDefaultAsync(m => m.ID_пользователя == userID);
    int? userRole = user?.Роль;
    if (userRole == 4)
    {
        <h2>Доступ запрещен</h2>
    }
    else
    {
        if (userRole == 1)
        {
            <p>
                <a asp-page="Create">Добавить</a>
            </p>
        }
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Основания_увольнения[0].Основание)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Основания_увольнения)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Основание)
                        </td>
                        <td>
                            @if (userRole == 1)
                            {
                            <a asp-page="./Edit" asp-route-id="@item.ID_основания_увольнения">Изменить</a> 
                            }
                           
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
    }
 
}
else
{
    await SignInManager.SignOutAsync(); // Sign out any potential residual user
    Response.Redirect("/Identity/Account/Login"); // Redirect to the login page
    return;
}